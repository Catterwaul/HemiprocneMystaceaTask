{"topicSections":[{"anchor":"Topics","identifiers":["doc:\/\/HMTask\/documentation\/HMTask\/Mapping-Methods","doc:\/\/HMTask\/documentation\/HMTask\/_Concurrency\/Task\/reduce(_:_:)"]},{"anchor":"Duplicates-for-Never-and-any-Error","identifiers":["doc:\/\/HMTask\/documentation\/HMTask\/_Concurrency\/Task\/zip(_:)-4fs1y","doc:\/\/HMTask\/documentation\/HMTask\/_Concurrency\/Task\/zip(_:)-4lo32"],"abstract":[{"type":"emphasis","inlineContent":[{"text":"Working with ","type":"text"},{"type":"codeVoice","code":"Task"},{"text":"s often requires an overload for each of the two supported ","type":"text"},{"type":"codeVoice","code":"Failure"},{"text":" types.","type":"text"}]}],"title":"Duplicates for `Never` and `any Error`"}],"variants":[{"paths":["\/documentation\/hmtask"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/HMTask\/documentation\/HMTask","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"anchor":"An-asynchronous-get-only-throwing-property-wrapper","level":2,"type":"heading","text":"An asynchronous get-only throwing property wrapper?"},{"inlineContent":[{"type":"text","text":"Although "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" qualifies as being a ‚Äú"},{"type":"reference","identifier":"https:\/\/github.com\/Catterwaul\/Thrappture","isActive":true},{"type":"text","text":"‚Äù, and has a lot in common with "},{"code":"Result","type":"codeVoice"},{"type":"text","text":", in particular, it has some key differences to its synchronous cousins."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"First, unlike mutable "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"s, the value of a "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" exclusively makes sense to be "},{"type":"codeVoice","code":"get"},{"type":"text","text":"-only. Although it‚Äôs not currently possible in Swift, it might make sense for an asynchronous "},{"inlineContent":[{"type":"text","text":"property"}],"type":"emphasis"},{"type":"text","text":" to be settable‚Äîbut not the "},{"type":"codeVoice","code":"value"},{"type":"text","text":" of a "},{"type":"codeVoice","code":"Task"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Usage-Examples","level":3,"type":"heading","text":"Usage Examples"},{"inlineContent":[{"type":"text","text":"You‚Äôve got the source code, so aside from reading this documentation, see the "},{"inlineContent":[{"type":"text","text":"Tests"}],"type":"strong"},{"type":"text","text":" folder for example usage! üò∫"}],"type":"paragraph"}]}],"metadata":{"symbolKind":"module","externalID":"HMTask","title":"HMTask","roleHeading":"Framework","modules":[{"name":"HMTask"}],"role":"collection"},"sections":[],"abstract":[{"text":"Extended functionality for ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/task","type":"reference"},{"text":".","type":"text"}],"references":{"https://developer.apple.com/documentation/swift/task":{"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/task","titleInlineContent":[{"type":"text","text":"Task"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swift\/task","title":"Task"},"doc://HMTask/documentation/HMTask/_Concurrency/Task/reduce(_:_:)":{"role":"symbol","identifier":"doc:\/\/HMTask\/documentation\/HMTask\/_Concurrency\/Task\/reduce(_:_:)","url":"\/documentation\/hmtask\/_concurrency\/task\/reduce(_:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Transformed","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Error","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Transformed","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Success"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Failure"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Modify a success value."}],"title":"reduce(_:_:)","type":"topic"},"doc://HMTask/documentation/HMTask":{"type":"topic","abstract":[{"type":"text","text":"Extended functionality for "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/task"},{"type":"text","text":"."}],"identifier":"doc:\/\/HMTask\/documentation\/HMTask","url":"\/documentation\/hmtask","title":"HMTask","role":"collection","kind":"symbol"},"doc://HMTask/documentation/HMTask/_Concurrency/Task/zip(_:)-4lo32":{"abstract":[{"type":"text","text":"Exchange a tuple of "},{"type":"codeVoice","code":"Task"},{"type":"text","text":"s for a single "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" whose "},{"type":"codeVoice","code":"Success"},{"type":"text","text":" is a tuple."}],"kind":"symbol","identifier":"doc:\/\/HMTask\/documentation\/HMTask\/_Concurrency\/Task\/zip(_:)-4lo32","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">((repeat "},{"kind":"typeIdentifier","text":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","text":"<each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">)) -> "},{"kind":"typeIdentifier","text":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/hmtask\/_concurrency\/task\/zip(_:)-4lo32","role":"symbol","title":"zip(_:)","conformance":{"constraints":[{"code":"Success","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Failure","type":"codeVoice"},{"type":"text","text":" is "},{"code":"any Error","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://HMTask/documentation/HMTask/Mapping-Methods":{"role":"collectionGroup","type":"topic","url":"\/documentation\/hmtask\/mapping-methods","title":"Mapping Methods","identifier":"doc:\/\/HMTask\/documentation\/HMTask\/Mapping-Methods","abstract":[],"kind":"article"},"https://github.com/Catterwaul/Thrappture":{"identifier":"https:\/\/github.com\/Catterwaul\/Thrappture","titleInlineContent":[{"type":"text","text":"throwing property wrapper"}],"type":"link","url":"https:\/\/github.com\/Catterwaul\/Thrappture","title":"throwing property wrapper"},"doc://HMTask/documentation/HMTask/_Concurrency/Task/zip(_:)-4fs1y":{"identifier":"doc:\/\/HMTask\/documentation\/HMTask\/_Concurrency\/Task\/zip(_:)-4fs1y","kind":"symbol","abstract":[{"type":"text","text":"Exchange a tuple of "},{"type":"codeVoice","code":"Task"},{"type":"text","text":"s for a single "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" whose "},{"type":"codeVoice","code":"Success"},{"type":"text","text":" is a tuple."}],"type":"topic","title":"zip(_:)","url":"\/documentation\/hmtask\/_concurrency\/task\/zip(_:)-4fs1y","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Success","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Failure","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"zip","kind":"identifier"},{"text":"<each ","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">((repeat ","kind":"text"},{"text":"Task","kind":"typeIdentifier","preciseIdentifier":"s:ScT"},{"text":"<each ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">)) -> ","kind":"text"},{"text":"Task","kind":"typeIdentifier","preciseIdentifier":"s:ScT"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"}}}