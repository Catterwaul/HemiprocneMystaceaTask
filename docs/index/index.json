{"includedArchiveIdentifiers":["HMTask"],"interfaceLanguages":{"swift":[{"children":[{"children":[{"path":"\/documentation\/hmtask\/_concurrency\/task\/flatmap(_:)-3ogpm","title":"func flatMap<NewSuccess, Error>(sending (Success) async throws(Error) -> Task<NewSuccess, Failure>) -> Task<NewSuccess, any Error>","type":"method"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/map(_:)-8wbux","title":"func map<NewSuccess, Error>(sending (Success) async throws(Error) -> NewSuccess) -> Task<NewSuccess, any Error>","type":"method"},{"title":"Failure == Never","type":"groupMarker"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/flatmap(_:)-8cxrg","title":"func flatMap<NewSuccess>(sending (Success) async -> Task<NewSuccess, Failure>) -> Task<NewSuccess, Never>","type":"method"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/map(_:)-4tunf","title":"func map<NewSuccess>(sending (Success) async -> NewSuccess) -> Task<NewSuccess, Never>","type":"method"},{"title":"Failure != Never","type":"groupMarker"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/flatmapfailure(_:)","title":"func flatMapFailure<NewFailure, Error>(sending (Failure) async throws(Error) -> Task<Success, NewFailure>) -> Task<Success, any Error>","type":"method"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/mapfailure(_:)","title":"func mapFailure<NewFailure, Error>(sending (Failure) async throws(Error) -> NewFailure) -> Task<Success, any Error>","type":"method"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/mapfailuretosuccess(_:)","title":"func mapFailureToSuccess(sending (Failure) async -> Success) -> Task<Success, Never>","type":"method"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/mapfailuretosuccessanderrortofailure(_:)","title":"func mapFailureToSuccessAndErrorToFailure<Error>(sending (Failure) async throws(Error) -> Success) -> Task<Success, any Error>","type":"method"}],"path":"\/documentation\/hmtask\/mapping-methods","title":"Mapping Methods","type":"symbol"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/reduce(_:_:)","title":"func reduce<Transformed, Error>(Transformed, (Transformed, Success) async throws(Error) -> Transformed) async throws(Error) -> Transformed","type":"method"},{"title":"Duplicates for `Never` and `any Error`","type":"groupMarker"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/zip(_:)-4fs1y","title":"static func zip<each Element>((repeat Task<each Element, Failure>)) -> Task<Success, Failure>","type":"method"},{"path":"\/documentation\/hmtask\/_concurrency\/task\/zip(_:)-4lo32","title":"static func zip<each Element>((repeat Task<each Element, Failure>)) -> Task<Success, Failure>","type":"method"}],"path":"\/documentation\/hmtask","title":"HMTask","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}